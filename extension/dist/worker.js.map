{"version":3,"file":"worker.js","sources":["../src/worker.ts"],"sourcesContent":["// src/worker.ts\n\nasync function ensureContentInjected(tabId: number) {\n  try {\n    await chrome.scripting.executeScript({\n      target: { tabId },\n      files: ['content.js'], // built from src/content/main.tsx\n    });\n  } catch (e) {\n    // Happens on restricted pages (e.g., chrome://, Chrome Web Store, PDFs)\n    console.warn('Injection failed:', e);\n  }\n}\n\nchrome.commands.onCommand.addListener(async (cmd) => {\n  if (cmd !== 'toggle-overlay') return;\n  const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\n  if (!tab?.id) return;\n\n  await ensureContentInjected(tab.id);\n  chrome.tabs.sendMessage(tab.id, { type: 'TOGGLE' });\n});\n\nchrome.runtime.onInstalled.addListener(() => {\n  console.log('Inline Copilot installed');\n});\n\nchrome.runtime.onConnect.addListener((port) => {\n  if (port.name !== 'copilot') return;\n\n  port.onMessage.addListener(async (msg) => {\n    if (msg.type !== 'ask') return;\n    try {\n      const resp = await fetch('http://localhost:3000/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ input: msg.input }),\n      });\n      const reader = resp.body?.getReader();\n      if (!reader) return port.postMessage({ type: 'done', error: 'no stream' });\n\n      const decoder = new TextDecoder();\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n        const chunk = decoder.decode(value, { stream: true });\n        if (chunk) port.postMessage({ type: 'delta', token: chunk });\n      }\n      port.postMessage({ type: 'done' });\n    } catch (err) {\n      const message = err instanceof Error ? err.message : String(err);\n      port.postMessage({ type: 'done', error: message });\n    }\n  });\n});\n"],"names":["ensureContentInjected","tabId","e","cmd","tab","port","msg","_a","reader","decoder","done","value","chunk","err","message"],"mappings":"AAEA,eAAeA,EAAsBC,EAAe,CAClD,GAAI,CACF,MAAM,OAAO,UAAU,cAAc,CACnC,OAAQ,CAAE,MAAAA,CAAA,EACV,MAAO,CAAC,YAAY,CAAA,CACrB,CACH,OAASC,EAAG,CAEV,QAAQ,KAAK,oBAAqBA,CAAC,CACrC,CACF,CAEA,OAAO,SAAS,UAAU,YAAY,MAAOC,GAAQ,CACnD,GAAIA,IAAQ,iBAAkB,OAC9B,KAAM,CAACC,CAAG,EAAI,MAAM,OAAO,KAAK,MAAM,CAAE,OAAQ,GAAM,cAAe,EAAA,CAAM,EACtEA,GAAA,MAAAA,EAAK,KAEV,MAAMJ,EAAsBI,EAAI,EAAE,EAClC,OAAO,KAAK,YAAYA,EAAI,GAAI,CAAE,KAAM,SAAU,EACpD,CAAC,EAED,OAAO,QAAQ,YAAY,YAAY,IAAM,CAC3C,QAAQ,IAAI,0BAA0B,CACxC,CAAC,EAED,OAAO,QAAQ,UAAU,YAAaC,GAAS,CACzCA,EAAK,OAAS,WAElBA,EAAK,UAAU,YAAY,MAAOC,GAAQ,CA5B5C,IAAAC,EA6BI,GAAID,EAAI,OAAS,MACjB,GAAI,CAMF,MAAME,GAASD,GALF,MAAM,MAAM,iCAAkC,CACzD,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAA,EAC3B,KAAM,KAAK,UAAU,CAAE,MAAOD,EAAI,MAAO,CAAA,CAC1C,GACmB,OAAL,YAAAC,EAAW,YAC1B,GAAI,CAACC,EAAQ,OAAOH,EAAK,YAAY,CAAE,KAAM,OAAQ,MAAO,YAAa,EAEzE,MAAMI,EAAU,IAAI,YACpB,OAAa,CACX,KAAM,CAAE,KAAAC,EAAM,MAAAC,CAAA,EAAU,MAAMH,EAAO,KAAA,EACrC,GAAIE,EAAM,MACV,MAAME,EAAQH,EAAQ,OAAOE,EAAO,CAAE,OAAQ,GAAM,EAChDC,KAAY,YAAY,CAAE,KAAM,QAAS,MAAOA,EAAO,CAC7D,CACAP,EAAK,YAAY,CAAE,KAAM,MAAA,CAAQ,CACnC,OAASQ,EAAK,CACZ,MAAMC,EAAUD,aAAe,MAAQA,EAAI,QAAU,OAAOA,CAAG,EAC/DR,EAAK,YAAY,CAAE,KAAM,OAAQ,MAAOS,EAAS,CACnD,CACF,CAAC,CACH,CAAC"}